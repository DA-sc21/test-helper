plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'kr.ac.ajou.da'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly("org.springframework.boot:spring-boot-devtools")

	//aws
	implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.1000')
	implementation 'com.amazonaws:aws-java-sdk-sts:1.12.88'
	implementation 'com.amazonaws:aws-java-sdk-kinesisvideo:1.12.89'
	implementation 'com.amazonaws:aws-java-sdk-s3'

	//swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:2.0.2'

	//log
	implementation 'org.slf4j:slf4j-api:1.7.25'

	//db
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2'
	implementation 'org.springframework.data:spring-data-jpa:2.5.5'
	implementation 'org.hibernate:hibernate-core:5.6.0.Final'
	implementation 'org.hibernate:hibernate-entitymanager:4.1.7.Final'

	implementation 'org.mariadb.jdbc:mariadb-java-client:2.1.2'

	// mobile detection
	implementation 'org.springframework.boot:spring-boot-starter-mobile:1.5.22.RELEASE'
	
	// web client
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	
	// chatting
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	// implementation 'org.springframework.kafka:spring-kafka'
	implementation 'com.google.guava:guava:23.0'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'

	//aop
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	
	// email
	implementation 'org.springframework.boot:spring-boot-starter-mail'

}

bootRun{
	systemProperties System.properties
}

test {
	testLogging {
		events "PASSED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
	}
	useJUnitPlatform()
}
